소환!;

은교햄.변수(하나, 10);
은교햄.변수(하나, 210);
은교햄.변수(둘, 24);

은교햄.출력("init");

은교햄.반복(0, 5, 1, 임시 i: 은교햄.출력(i));

은교햄.만약(1, 임시: 은교햄.출력("참"), 임시 : 은교햄.출력("거짓"));

은교햄.출력(은교햄.하나);
은교햄.출력(은교햄.둘);

은교햄.반복(0,4,1,임시: 은교햄.반복(0,4,1,임시: 은교햄.엔터없이출력("*")); 은교햄.출력());

은교햄.출력(은교햄.하나 < 20);

은교햄.반복(0,10,1, 임시 ㅇ: 은교햄.만약(ㅇ < 5, 임시 ㅇ: 은교햄.엔터없이출력(ㅇ), 임시: 은교햄.엔터없이출력()));
은교햄.출력();

은교햄.반복(0,5,1, 임시: 은교햄.엔터없이출력("$"); 은교햄.출력());

은교햄.반복(0,10,1,
    임시 ㅇ : 은교햄.반복(0,10-ㅇ-1, 1, 임시 : 은교햄.엔터없이출력(" "));
            은교햄.반복(0,ㅇ*2-1, 1, 임시: 은교햄.엔터없이출력("*"));
            은교햄.출력());

은교햄.변수(ㅜ, 5);
은교햄.변수(ㅑ, 0);

은교햄.반복(1, 은교햄.ㅜ*2, 1,
    임시 ㅑㅌ:
        은교햄.만약(ㅑㅌ < 은교햄.ㅜ,
            임시: 은교햄.변수(ㅑ, ㅑㅌ),
            임시: 은교햄.변수(ㅑ, 은교햄.ㅜ*2-2-ㅑㅌ)
        );
        은교햄.반복(0, 은교햄.ㅜ*4-3, 1,
            임시 ㅓ:
                은교햄.만약(은교햄.ㅑ == 0,
                    임시: 은교햄.만약(ㅓ < 은교햄.ㅜ || ㅓ > 은교햄.ㅜ*3-4,
                        임시: 은교햄.엔터없이출력("*"),
                        임시: 은교햄.엔터없이출력(" ")
                    ),
                    임시: 은교햄.만약(ㅓ == 은교햄.ㅑ || ㅓ == 은교햄.ㅑ + 은교햄.ㅜ - 1 || ㅓ == 은교햄.ㅜ * 3 - 3 - 은교햄.ㅑ || ㅓ == 은교햄.ㅜ * 4 - 4 - 은교햄.ㅑ,
                        임시: 은교햄.엔터없이출력("*"),
                        임시 : 은교햄.엔터없이출력(" ")
                    )
                )
        );
        은교햄.출력()
);

은교햄.출력(은교햄 < 99999999);
은교햄.출력(9999999 > 은교햄);
은교햄.출력(9999999 < 은교햄);
은교햄.출력(은교햄 > 999090909);

은교햄.변수("ㅇㅇ", 임시 : 은교햄.출력("ㅇㅇ"));

은교햄.ㅇㅇ();

은교햄.변수("매개변수", 임시 ㅇ : 은교햄.출력(ㅇ));
은교햄.매개변수(325);
은교햄.매개변수(352525);

은교햄.변수("아", 임시 : 123);
은교햄.출력(임시 : 2 * 은교햄.아());

은교햄.변수("펙토리얼", 
임시 ㅇ : 은교햄.만약(ㅇ == 0,
  임시 : 1,
  임시 : ㅇ * 은교햄.펙토리얼(ㅇ - 1)
));

은교햄.출력(임시 : 은교햄.펙토리얼(10));

은교햄.변수(리스트, 은교햄.리스트());
은교햄.반복(0,100,1, 임시 ㅏ : 은교햄.삽입(은교햄.리스트, ㅏ));
은교햄.출력(은교햄.리스트);

은교햄.변수("리스트출력", 임시 ㅏㅏ :
    은교햄.반복(0,100,1, 
        임시 ㅏ : 은교햄.엔터없이출력(은교햄.인덱싱(ㅏㅏ, ㅏ)+", ")
    );
    은교햄.출력()
);

은교햄.리스트출력(은교햄.리스트);


은교햄.변수(테스트, "10");
은교햄.출력(10+은교햄.정수(은교햄.테스트));

은교햄.변수(테스트2, 임시: 은교햄.출력(10));
🖕실행 : 람다 변수 실행용
🖕은교햄.실행(은교햄.테스트2);

🖕dadafdf
특검;

🖕에러남
🖕은교햄.출력();
